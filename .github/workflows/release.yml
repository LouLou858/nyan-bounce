name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read version from version.txt
        id: get_version
        shell: bash
        run: |
          VERSION="v$(cat version.txt)"
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build binary
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --onefile --icon=assets/icons/nyan.ico src/nyan_bounce.py
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            pyinstaller --onefile --icon=assets/icons/nyan.icns src/nyan_bounce.py
          else
            pyinstaller --onefile --icon=assets/icons/nyan.png src/nyan_bounce.py
          fi

      - name: Rename artifact and add extension
        shell: bash
        run: |
          mkdir -p dist_upload
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            mv dist/nyan_bounce.exe dist_upload/nyan_bounce-${VERSION}-win.exe
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            mv dist/nyan_bounce dist_upload/nyan_bounce-${VERSION}-mac.bin
          else
            mv dist/nyan_bounce dist_upload/nyan_bounce-${VERSION}-linux.bin
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${VERSION}-${{ matrix.os }}
          path: dist_upload/*

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.version }}
          name: Release ${{ env.version }}
          files: dist_upload/*
